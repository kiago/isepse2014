************************************************************************
			 Commandes utilisées en TP
************************************************************************

man COMMANDE : permet de voir le manuel d'utilisation d'une commande

nano /etc/passwd : editer le fichier "passwd" avec l'éditeur nano.

/*																	*\
 Récupérer le 7eme champs d'une phrase par rapport au séparateur ":"
 Mettre le résultat dans un nouveau fichier "numberShells"
\*																	*/

cut -d : -f 7 /etc/passwd > numberShells

cat numberShells : voir le contenu de "numberShells" directement dans la
                   console

/*																	*\
 Ordonner par ordre alphabétique le contenu de numberShells
 Mettre le résultat dans un nouveau fichier "numberShellSort"		
\*																	*/

sort -n numberShells > numberShellSort

/*																	*\
 Supprimer les doublons du contenu de numberShells
 Mettre le résultat dans un nouveau fichier "shellUniq"		
\*																	*/

uniq -c numberShellSort > shellUniq

/*																	*\
 Ordonner par ordre décroissant le contenu de shellUniq
 Mettre le résultat dans un nouveau fichier "ShellSorted"		
\*																	*/

sort -nr shellUniq.txt > ShellSorted.txt

********************* EN UNE LIGNE DE COMMANDE **********************
cut -d : -f 7 /etc/passwd | sort | uniq -c | sort -nr > allShells.txt
*********************************************************************

// Récupérer le contenu de "pg45495.txt"

wget www.gutenberg.org/cache/epub/45495/pg45495.txt

/*																	*\
 Remplacer les caractères qui ne sont pas des lettres par un saut 
 à la ligne du contenu de "pg45945.txt"
 Remplacer les majuscules par des minuscules
 Mettre le résultat dans un nouveau fichier "words.txt"	
\*																	*/
tr -cs [:alpha:] '\n'  < pg45495.txt | tr [A-Z] [a-z] > words.txt

/*																	*\
 Ordonner par ordre alphabétique le contenu de "words.txt"
 Supprimer les doublons et compter le nombre d'apparition de ce mot
 ordonner numériquement le résultat de façon décroissante
 Mettre le résultat dans un nouveau fichier "wordsSorted.txt"	
\*																	*/

sort words.txt | uniq -c | sort -nr  > wordsSorted.txt

/*																	*\
 Mettre les 10ers Résultats dans "WordMoreFound.txt"	
\*																	*/

head -n 10 wordsSorted.txt > WordMoreFound.txt

********************* EN UNE LIGNE DE COMMANDE *************************
tr -cs [:alpha:] '\n'  < pg45495.txt | tr [A-Z] [a-z] | sort words.txt |
uniq -c | sort -nr | head -n 10 > wordsMoreFound.txt
************************************************************************

Config pour envoyer un mail : /etc/postfix/main.cf

_______________________________________________________________________________

relayhost = [smtp.gmail.com]:587
smtp_sasl_auth_enable = yes
smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd
smtp_sasl_security_options = noanonymous
smtp_tls_CAfile = /etc/postfix/cacert.pem
smtp_use_tls = yes
mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128
mailbox_size_limit = 0
recipient_delimiter = +
inet_interfaces = all
_________________________________________________________________________________

$ echo "salut tout le monde" | mail -s "Test mail" example@test.com
_________________________________________________________________________________

PROJET :

-> Récupérer les pages HTML des films du box office

#!/bin/bash

echo "Récupération des films..."

wget -O allMovies.html http://www.allocine.fr/boxoffice/france/

sleep 1

tr -d '\n' < allMovies.html | grep -o -E '<h3><a class="fs12 bold" href="([^"#]+)"' | grep href | sed 's/^.*href="\([^"]*\)".*$/\1/' | sed "s/^/http:\/\/www.allocine.fr/g" > movies.html

echo -e "\nFin de Récupération des films"
echo "Récupération des descriptions..."

for movie in $(cat movies.html)
do
	echo "lien : $movie"
	wget $movie
done