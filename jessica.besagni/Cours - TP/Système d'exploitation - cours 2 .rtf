{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 28/04/2014\
\
Pourquoi utiliser les lignes de commandes\'a0?\'a0\
* Parce que l\'92on peut r\'e9cup\'e9rer des \'ab\'a0mouvements\'a0\'bb que l\'92on a d\'e9j\'e0 fait en ligne de commandes gr\'e2ce \'e0 la fl\'e8che.\
\
Langage compil\'e9\'a0: en java on \'e9crit un code, on met\'a0\'e7a dans des fichiers d\'92extension et on compile, ce n\'92est qu\'92\'e0 partir de l\'e0 que l\'92on peut lancer le programme.\
\
Langage interpr\'e9t\'e9\'a0: BASH on a un programme qui s\'92appelle un interpr\'e9teur --> REPL\'a0: read eval print loop ==> Lecture de ce qui est saisi au clavier, l\'92interpr\'e9teur \'e9value et print affiche le r\'e9sultat et loop continue d\'92ex\'e9cuter le code.\
\
Cette deuxi\'e8me famille et notion de REPL\'a0: pourquoi\'a0?\
BASH est un interpr\'e9teur. Quand on est sur une console avec un terminal, on est sous un interpr\'e9teur qui est BASH. Ce qu\'92on ex\'e9cute ce sont des lignes de code dans un langage de programmation (ls par exemple ou cd)\
\
BASH interpr\'e9teur de SHELL\
Quand on est sous bash on peut interpr\'e9ter n\'92importe quel programme.\
\
Nom relatif\'a0: \
Nom absolu\'a0: chemin pour ouvrir un fichier \'e0 partir de la racine\'a0\
\
Quand on \'e9crit un programme sous shell on \'e9crit uniquement le nom du fichier mais bash doit savoir o\'f9 se trouve se programme\'a0\
\
On peut changer la liste de r\'e9pertoire\'a0: variable\'a0: PATH\
\
ATTENTION\'a0: minuscules et majuscules sont importantes\'a0\
Convention de base\'a0: $PATH\
Variable d\'92environnement\'a0: variable qui permet de donner \'e0 bash les \'e9l\'e9ments n\'e9cessaires pour interpr\'e9ter ce que l\'92on veut faire\
Variable\'a0: nom auquel on associe une variable\
Comment acceder \'e0 une variable\'a0: $nomvariable\
\
BASH s\'92attend \'e0 avoir une commande avant le reste de ce que l\'92on demande, il faut toujours mettre une commande sinon bash ne peut pas interpr\'e9ter ni deviner ce que l\'92on veut faire.\
\
En faisant $PATH on lui a demander d\'92ex\'e9cuter la variable PATH, mais pas de l\'92afficher. Si on veut afficher la valeur on doit \'e9crire la commande suivante\'a0: echo\
\
2 fa\'e7ons d\'92interpr\'e9ter un langage de programmation\'a0:\
\
\
BASH\'a0: domain specific language\'a0: bash n\'92interpr\'e8te que les chaines de caract\'e8re\'a0: ex une variable contient une chaine de caract\'e8re.\
\
EX\'a0: PATH dans un autre langage que BASH, on aurait pu avoir un tableau\'a0: PATH contient un ensemble de chaine de caract\'e8re \
\
Editeur de texte\'a0: permet d\'92editer, g\'e9rer, cr\'e9er modifier du texte brut\
* JEdit\
* Imax\
\
Traitement de texte\'a0: pour faire du code \
\
Compl\'e9tion automatique \
\
Etc password correspond \'e0 des personnes qui veulent se connecter\
\
\
Commandes de base\'a0:\
* Editor\'a0: s\'e9lectionner un editeur de texte par d\'e9faut \
* Man \'91nom de la commande\'92\'a0: manuel de dpc\'a0: permet d\'92avoir la doc d\'92une commande\
* Ls\'a0: lister un contenu\
* Cd acc\'e9der \'e0 un dossier, se d\'e9placer\
* Nano\'a0: ouvrir un \'e9diteur de texte \
* Cut\'a0: cut -d : -f 1,7 /etc/passwd\'a0:lister le dernier \'e9l\'e9ment pour chaque fichier du document etc passwd dans le nano (editeur de texte)\
* cd ~\'a0: revenir au d\'e9part\
* Sort\'a0: permet de classer le contenu d\'92un fichier\
* Uniq permet de ressortir les \'e9l\'e9ments uniques dans le fichier\
* Uniq \'96c permet d\'92afficher le nombre de fois que le nom de fichier dans notre fichier appara\'eet\
* Sort \'96n permet de trier les fichiers par rapport \'e0 leur ordre d\'92apparition par ordre croissant\
* Curl nom du lien\'a0: t\'e9l\'e9charger un site ou un fichier ou un logiciel sur mac\
* Wget\'a0: t\'e9l\'e9charger sur windows\
* Ctrl D\'a0: fin de fichier quand on a ex\'e9cut\'e9 une commande qui ne r\'e9pond pas pendant longtemps\
* Nom du fichier.txt > nom du fichier.txt\'a0: permet d\'92enregistrer le fichier ailleurs dans les documents dans un fichier s\'e9par\'e9 et renomm\'e9 \
* Pwt\'a0: nous ram\'e8ne \'e0 tout moment dans le chemin \
* Git add * ou . ou \'96A\
* Git commit \'96m \'91message\'92\
* Git push (mettre en ligne)\
* Git pull (r\'e9cup\'e9rer ce qu\'92il y a en ligne)\
* History\'a0: \
\
Diff\'e9rence type windows et type linux\'a0:\
\
\
ATTENTION QUESTION EXAM A TRAVAILLER\'a0:\
Prendre un fichier texte, sortir les mots qui sortent le plus souvent dans l\'92ordre d\'92apparition avec le nombre de fois que le mot appara\'eet dans le texte \
\
\
Exercice\'a0: trouver la liste des shells utilis\'e9s sur la machine que l\'92on utilise\'a0\
\
cut -d : -f 1,7 /etc/passwd\
\
* Lister le premier et le dernier \'e9l\'e9ment (-f 1,7) pour chaque fichier du document etc/passwd dans le nano (editeur de texte)\
* Il faut d\'92abord d\'e9finir le d\'e9limiteur qui est ici les deux points (\'a0: ), on aurait pu mettre le d\'e9limiteur \'ab\'a0y\'a0\'bb ou autre mais dans le cas particulier de notre fichier on a les deux points qui nous arrangent.\
(pour afficher le contenu du fichier on tape\'a0: nano /etc/passwd \
\
cut -f 7 -d : /etc/passwd | sort | uniq \'96c | sort \'96n\
\
Cette ligne de commande permet d\'92afficher tous les shells utilis\'e9s dans etc/passwd dans le nano (\'e9diteur de texte) par ordre d\'92utilisation croissant sans doublons (c\'92est pour cela qu\'92on utilise sort et uniq) --> voir plus haut pour l\'92utilisation de la commande \
\
Mode append\'a0: on utilise ce symbole >>\
Mode overwrite\'a0: <\
			>\
\
curl www.gutenberg.org/cache/epub/45495/pg45495.txt | tr -s -c [:alpha:] '\\n'\
\
Cette commande permet de t\'e9l\'e9charger un fichier et de morceler ce fichier par mot et de mettre \'e0 la ligne via \'91 \\ n \'91 chaque mot. La ligne de commande va regarder quand il n\'92y a pas de lettre (les espaces) et passe donc \'e0 la ligne on fait \'e7a grace \'e0 la commande tr.\
 \
curl www.gutenberg.org/cache/epub/45495/pg45495.txt | tr -s -c [:alpha:] '\\n' | tr "A-Z" "a-z" | sort | uniq \'96c | sort \'96n\
\
Permet de classer l\'92ordre d\'92apparition des mots par ordre de fr\'e9quence croissant \
\
BASH est un langage interpr\'e9t\'e9 avec des variables avec des op\'e9rations d\'92entr\'e9e et de sortie\
\
 \
}