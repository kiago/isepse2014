{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf190
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 Commandes de base\'a0:\
* Editor\'a0: s\'e9lectionner un editeur de texte par d\'e9faut \
* Man \'91nom de la commande\'92\'a0: manuel de dpc\'a0: permet d\'92avoir la doc d\'92une commande\
* Ls\'a0: lister un contenu\
* Cd acc\'e9der \'e0 un dossier, se d\'e9placer\
* Nano\'a0: ouvrir un \'e9diteur de texte \
* Cut\'a0: cut -d : -f 1,7 /etc/passwd\'a0:lister le dernier \'e9l\'e9ment pour chaque fichier du document etc passwd dans le nano (editeur de texte)\
* cd ~\'a0: revenir au d\'e9part\
* Sort\'a0: permet de classer le contenu d\'92un fichier\
* Uniq permet de ressortir les \'e9l\'e9ments uniques dans le fichier\
* Uniq \'96c permet d\'92afficher le nombre de fois que le nom de fichier dans notre fichier appara\'eet\
* Sort \'96n permet de trier les fichiers par rapport \'e0 leur ordre d\'92apparition par ordre croissant\
* Curl nom du lien\'a0: t\'e9l\'e9charger un site ou un fichier ou un logiciel sur mac\
* Wget\'a0: t\'e9l\'e9charger sur windows\
* Ctrl D\'a0: fin de fichier quand on a ex\'e9cut\'e9 une commande qui ne r\'e9pond pas pendant longtemps\
* Nom du fichier.txt > nom du fichier.txt\'a0: permet d\'92enregistrer le fichier ailleurs dans les documents dans un fichier s\'e9par\'e9 et renomm\'e9 \
* Pwt\'a0: nous ram\'e8ne \'e0 tout moment dans le chemin \
* Git add * ou . ou \'96A\
* Git commit \'96m \'91message\'92\
* Git push (mettre en ligne)\
* Git pull (r\'e9cup\'e9rer ce qu\'92il y a en ligne)\
* History\'a0: \
\
Diff\'e9rence type windows et type linux\'a0:\
\
\
ATTENTION QUESTION EXAM A TRAVAILLER\'a0:\
Prendre un fichier texte, sortir les mots qui sortent le plus souvent dans l\'92ordre d\'92apparition avec le nombre de fois que le mot appara\'eet dans le texte\
\
\
COMMANDES DE BASE \
\
1) Comment travailler dans son r\'e9pertoire Git\
\
Une fois la configuration SSH et la synchronisation effective en local avec son\
dossier sur son compte Git, il suffit de se rendre dans le dossier local pour\
commencer \'e0 travailler. Dans mon cas :\
\
> cd Documents/gitrepository/isepse2014\
\
2) Comment cr\'e9er un fichier vide\
\
> touch nomDuFichier\
\
3) Comment \'e9diter un fichier\
\
> nano nomDuFichier\
\
Pour sauvegarder le fichier, utiliser la commande ^X (Exit) dans l'interface. Attention,\
il faut remplacer le ^ par la touche ctrl.\
\
4) Synchronisation serveur vers local\
\
> git pull\
\
5) Synchronisation local vers serveur : comment faire un commit ?\
\
Astuce : pour voir les modifications qui n'ont pas \'e9t\'e9 mises dans la file\
d'attente des commit, saisir : git status. \
Pour passer les lignes rouges en vert afin de pouvoir les commiter :\
> git add *\
\
Pour faire un commit apr\'e8s avoir modifi\'e9 un fichier :\
> git commit -m "textCommit"\
\
Enfin, pour envoyer le tout sur le serveur,\
> git push\
\
Pour naviguer :\
- afficher le contenu d'un dossier : ls\
- aller dans un dossier : cd nomDuDossier\
- aller dans le fichier parent : cd ..\
- aller dans un sous-dossier : cd nomDuDossier/sousDossier\
\
Console :\
- effacer toutes les \'e9critures : cmd+K\
\
6) D\'e9placer ou renommer un fichier :\
Pour cela, on utilise la commande 'mv' :\
> mv nomFichier nouveauNomFichier\
ou pour d\'e9placer :\
> mv fichier autreRepertoire/\
\
7) Rendre un script ex\'e9cutable\
> chmod +x monScript.sh\
\
8) Rendre un script inex\'e9cutable\
> chmod -x monScript.sh\
\
9) Ex\'e9cuter un script\
> ./monScript.sh\
\
10) Lancer un script de raccourci (ex. : cd Documents/gitrepository/...) et faire en sorte d'\'eatre plac\'e9 dans le dossier :\
> . ./projetBash (mon script permettant d'arriver dans mon dossier directement apr\'e8s avoir d\'e9marr\'e9 le terminal)\
}